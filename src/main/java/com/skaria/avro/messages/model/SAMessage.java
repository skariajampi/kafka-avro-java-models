/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.skaria.avro.messages.model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SAMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8281851425434629655L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SAMessage\",\"namespace\":\"com.skaria.avro.messages.model\",\"fields\":[{\"name\":\"data\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"attempt\",\"type\":\"int\",\"default\":0},{\"name\":\"correlation_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"is_delete\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String data;
  @Deprecated public int attempt;
  @Deprecated public java.lang.String correlation_id;
  @Deprecated public boolean is_delete;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SAMessage() {}

  /**
   * All-args constructor.
   * @param data The new value for data
   * @param attempt The new value for attempt
   * @param correlation_id The new value for correlation_id
   * @param is_delete The new value for is_delete
   */
  public SAMessage(java.lang.String data, java.lang.Integer attempt, java.lang.String correlation_id, java.lang.Boolean is_delete) {
    this.data = data;
    this.attempt = attempt;
    this.correlation_id = correlation_id;
    this.is_delete = is_delete;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return data;
    case 1: return attempt;
    case 2: return correlation_id;
    case 3: return is_delete;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: data = (java.lang.String)value$; break;
    case 1: attempt = (java.lang.Integer)value$; break;
    case 2: correlation_id = (java.lang.String)value$; break;
    case 3: is_delete = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'data' field.
   * @return The value of the 'data' field.
   */
  public java.lang.String getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.lang.String value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'attempt' field.
   * @return The value of the 'attempt' field.
   */
  public java.lang.Integer getAttempt() {
    return attempt;
  }

  /**
   * Sets the value of the 'attempt' field.
   * @param value the value to set.
   */
  public void setAttempt(java.lang.Integer value) {
    this.attempt = value;
  }

  /**
   * Gets the value of the 'correlation_id' field.
   * @return The value of the 'correlation_id' field.
   */
  public java.lang.String getCorrelationId() {
    return correlation_id;
  }

  /**
   * Sets the value of the 'correlation_id' field.
   * @param value the value to set.
   */
  public void setCorrelationId(java.lang.String value) {
    this.correlation_id = value;
  }

  /**
   * Gets the value of the 'is_delete' field.
   * @return The value of the 'is_delete' field.
   */
  public java.lang.Boolean getIsDelete() {
    return is_delete;
  }

  /**
   * Sets the value of the 'is_delete' field.
   * @param value the value to set.
   */
  public void setIsDelete(java.lang.Boolean value) {
    this.is_delete = value;
  }

  /**
   * Creates a new SAMessage RecordBuilder.
   * @return A new SAMessage RecordBuilder
   */
  public static com.skaria.avro.messages.model.SAMessage.Builder newBuilder() {
    return new com.skaria.avro.messages.model.SAMessage.Builder();
  }

  /**
   * Creates a new SAMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SAMessage RecordBuilder
   */
  public static com.skaria.avro.messages.model.SAMessage.Builder newBuilder(com.skaria.avro.messages.model.SAMessage.Builder other) {
    return new com.skaria.avro.messages.model.SAMessage.Builder(other);
  }

  /**
   * Creates a new SAMessage RecordBuilder by copying an existing SAMessage instance.
   * @param other The existing instance to copy.
   * @return A new SAMessage RecordBuilder
   */
  public static com.skaria.avro.messages.model.SAMessage.Builder newBuilder(com.skaria.avro.messages.model.SAMessage other) {
    return new com.skaria.avro.messages.model.SAMessage.Builder(other);
  }

  /**
   * RecordBuilder for SAMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SAMessage>
    implements org.apache.avro.data.RecordBuilder<SAMessage> {

    private java.lang.String data;
    private int attempt;
    private java.lang.String correlation_id;
    private boolean is_delete;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.skaria.avro.messages.model.SAMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attempt)) {
        this.attempt = data().deepCopy(fields()[1].schema(), other.attempt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[2].schema(), other.correlation_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.is_delete)) {
        this.is_delete = data().deepCopy(fields()[3].schema(), other.is_delete);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SAMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.skaria.avro.messages.model.SAMessage other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attempt)) {
        this.attempt = data().deepCopy(fields()[1].schema(), other.attempt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[2].schema(), other.correlation_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.is_delete)) {
        this.is_delete = data().deepCopy(fields()[3].schema(), other.is_delete);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'data' field.
      * @return The value.
      */
    public java.lang.String getData() {
      return data;
    }

    /**
      * Sets the value of the 'data' field.
      * @param value The value of 'data'.
      * @return This builder.
      */
    public com.skaria.avro.messages.model.SAMessage.Builder setData(java.lang.String value) {
      validate(fields()[0], value);
      this.data = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'data' field.
      * @return This builder.
      */
    public com.skaria.avro.messages.model.SAMessage.Builder clearData() {
      data = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'attempt' field.
      * @return The value.
      */
    public java.lang.Integer getAttempt() {
      return attempt;
    }

    /**
      * Sets the value of the 'attempt' field.
      * @param value The value of 'attempt'.
      * @return This builder.
      */
    public com.skaria.avro.messages.model.SAMessage.Builder setAttempt(int value) {
      validate(fields()[1], value);
      this.attempt = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'attempt' field has been set.
      * @return True if the 'attempt' field has been set, false otherwise.
      */
    public boolean hasAttempt() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'attempt' field.
      * @return This builder.
      */
    public com.skaria.avro.messages.model.SAMessage.Builder clearAttempt() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'correlation_id' field.
      * @return The value.
      */
    public java.lang.String getCorrelationId() {
      return correlation_id;
    }

    /**
      * Sets the value of the 'correlation_id' field.
      * @param value The value of 'correlation_id'.
      * @return This builder.
      */
    public com.skaria.avro.messages.model.SAMessage.Builder setCorrelationId(java.lang.String value) {
      validate(fields()[2], value);
      this.correlation_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'correlation_id' field has been set.
      * @return True if the 'correlation_id' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'correlation_id' field.
      * @return This builder.
      */
    public com.skaria.avro.messages.model.SAMessage.Builder clearCorrelationId() {
      correlation_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'is_delete' field.
      * @return The value.
      */
    public java.lang.Boolean getIsDelete() {
      return is_delete;
    }

    /**
      * Sets the value of the 'is_delete' field.
      * @param value The value of 'is_delete'.
      * @return This builder.
      */
    public com.skaria.avro.messages.model.SAMessage.Builder setIsDelete(boolean value) {
      validate(fields()[3], value);
      this.is_delete = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'is_delete' field has been set.
      * @return True if the 'is_delete' field has been set, false otherwise.
      */
    public boolean hasIsDelete() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'is_delete' field.
      * @return This builder.
      */
    public com.skaria.avro.messages.model.SAMessage.Builder clearIsDelete() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public SAMessage build() {
      try {
        SAMessage record = new SAMessage();
        record.data = fieldSetFlags()[0] ? this.data : (java.lang.String) defaultValue(fields()[0]);
        record.attempt = fieldSetFlags()[1] ? this.attempt : (java.lang.Integer) defaultValue(fields()[1]);
        record.correlation_id = fieldSetFlags()[2] ? this.correlation_id : (java.lang.String) defaultValue(fields()[2]);
        record.is_delete = fieldSetFlags()[3] ? this.is_delete : (java.lang.Boolean) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
